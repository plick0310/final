<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="message">
	<!-- 메시지 전송 처리 -->
	<insert id="sendMessage" parameterType="com.wooltari.message.Message">
		INSERT INTO message(num, sent_Id, recv_Id, content) VALUES (message_seq.NEXTVAL, #{sent_Id}, #{recv_Id}, #{content})
    </insert>
    
    <sql id="where-mode">
    	<if test="mode=='all'">
		(recv_Id = #{userId} OR sent_Id = #{userId}) AND recv_Category != 0 AND sent_Category != 0
		</if>
		<if test="mode=='receive'">
		recv_Id = #{userId} AND recv_Category = 1
		</if>
		<if test="mode=='send'">
		sent_Id = #{userId} AND sent_Category = 1
		</if>
		<if test="mode=='keep'">
		recv_Id = #{userId} AND recv_Category = 2
		</if>
		<if test="mode=='trash'">
		recv_Id = #{userId} AND recv_Category = 3
		</if>
	</sql>
	
	<sql id="where-value">
		<if test="searchValue != null and searchValue != ''">
 		AND DBMS_LOB.INSTR(content, #{searchValue}) &gt; 0 
		</if>
	</sql>
	
    <!-- 메시지 개수 카운트 처리 -->
	<select id="dataCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0) FROM message
		<where>
			<include refid="where-mode"/>
			<include refid="where-value"/>
	    </where>
	</select>
	
	<!-- 읽지 않은 메시지 개수 카운트 처리 -->
	<select id="noreadCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0) FROM message
		WHERE recv_Id = #{userId} AND recv_Category = 1 AND read = 0
	</select>
	
	<!-- 쪽지 리스트 -->
	<select id="listMessage" parameterType="map" resultType="com.wooltari.message.Message">
		SELECT * FROM (
			SELECT ROWNUM rnum, tb.* FROM (
				SELECT num, sent_Id, recv_Id, sent_Name, userName AS recv_Name, content, date_Sent, date_Read, read, sent_Category, recv_Category FROM(
					SELECT num, sent_Id, recv_Id, userName AS sent_Name, content, date_Sent, date_Read, read, sent_Category, recv_Category
					FROM message msg JOIN member mem ON msg.sent_Id = mem.userId
				)tb JOIN member mem ON tb.recv_Id = mem.userId
            <where>
				<include refid="where-mode"/>
				<include refid="where-value"/>
	    	</where>
            ORDER BY num DESC
	<![CDATA[
	        ) tb WHERE ROWNUM <= #{end}
	    ) WHERE rnum >= #{start}
	]]>
	</select>
	
	<!-- 쪽지 보기 -->
	<select id="readMessage" resultType="com.wooltari.message.Message" parameterType="Integer">
		SELECT num, sent_Id, recv_Id, sent_Name, userName AS recv_Name, content, date_Sent, date_Read, read, sent_Category, recv_Category FROM(
			SELECT num, sent_Id, recv_Id, userName AS sent_Name, content, date_Sent, date_Read, read, sent_Category, recv_Category
				FROM message msg JOIN member mem ON msg.sent_Id = mem.userId
			)tb JOIN member mem ON tb.recv_Id = mem.userId
		WHERE num = #{num}
	</select>
	
	<!-- 읽은 쪽지 처리 -->
	<update id="updateReadMessage" parameterType="Integer">
		UPDATE message SET read=1, date_Read=SYSDATE WHERE num = #{num}
	</update>
	
	<!-- 받은 쪽지 읽은 쪽지 처리 -->
	<update id="readMessageList" parameterType="java.util.List">
		UPDATE (SELECT * FROM message WHERE read=0)message SET read=1, date_Read=SYSDATE WHERE num IN
		<foreach close=")" separator="," open="(" collection="list" index="index" item="num">#{num}</foreach>
	</update>
	
	<!-- 받은 쪽지 보관함 이동 처리 -->
	<update id="keepMessageList" parameterType="java.util.List">
		UPDATE message SET recv_Category=2 WHERE num IN
		<foreach close=")" separator="," open="(" collection="list" index="index" item="num">#{num}</foreach>
	</update>
	
	<!-- 받은 쪽지 휴지통 이동 처리 -->
	<update id="trashMessageList" parameterType="java.util.List">
		UPDATE message SET recv_Category=3 WHERE num IN
		<foreach close=")" separator="," open="(" collection="list" index="index" item="num">#{num}</foreach>
	</update>
	
	<!-- 받은 쪽지함 이동 처리 -->
	<update id="receiveMessageList" parameterType="java.util.List">
		UPDATE message SET recv_Category=1 WHERE num IN
		<foreach close=")" separator="," open="(" collection="list" index="index" item="num">#{num}</foreach>
	</update>
	
	<!-- 받은 쪽지 휴지통 비우기 처리 -->
	<update id="deleteMessageList" parameterType="java.util.List">
		UPDATE message SET recv_Category=0 WHERE num IN
		<foreach close=")" separator="," open="(" collection="list" index="index" item="num">#{num}</foreach>
	</update>
	
	<!-- 보낸 쪽지 삭제 처리-->
	<update id="deleteSendMessageList" parameterType="java.util.List">
		UPDATE message SET sent_Category=0 WHERE num IN
		<foreach close=")" separator="," open="(" collection="list" index="index" item="num">#{num}</foreach>
	</update>
	
</mapper>