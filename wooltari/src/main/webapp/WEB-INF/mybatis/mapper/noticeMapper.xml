<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="notice">
	
	<select id="maxNum" resultType="Integer">
		SELECT NVL(MAX(num),0) FROM notice
	</select>
	
	<insert id="insertNotice" parameterType="com.wooltari.notice.Notice">
	INSERT INTO notice(num, userId, subject, content, notice)
	VALUES(#{num},#{userId},#{subject},#{content},#{notice})	
	</insert>	
	
	<!-- sql태그 -->
	<!--  
	* LIKE 대신 INSTR()함수를 사용하는 경우 INSTR(content, #{searchValue} &gt;0
	* CLOB 인 경우 검색(LIKE 사용하지 말것)
	   DBMS_LOB.INSTR(content, #{searchValue}) &gt;0
	-->
	
	<sql id="where-list">
		<if test="searchKey=='userId'">
			userId=#{userId}
		</if>
		<if test="searchKey=='subject'">
			subject LIKE '%' || #{searchValue} || '%'
		</if>
		<if test="searchKey=='content'">
			DBMS_LOB.INSTR(content, #{searchValue})&gt;0
		</if>
	</sql>
	
	<!-- 글 개수 -->
	<select id="dataCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*),0) FROM notice n
			JOIN member m
			ON n.userId=m.userId
			<where>
				<if test="searchValue!=null and searchValue=''">
					<include refid="where-list"/>
				</if>
			</where>
	</select>
		
	<!--  글리스트 -->
	<select id="listNotice" parameterType="map" resultType="com.wooltari.notice.Notice">
		SELECT * FROM(
			SELECT ROWNUM rnum, tb.* FROM(
					SELECT n.num, notice, subject, hitCount, created, n.userId, content
					FROM notice n
					JOIN member m ON n.userId=m.userId
						WHERE notice != 1
						<where>
							<if test="searchValue !=null and searchValue!=''">
								<include refid="where-list"/>
							</if>
						</where>
					ORDER BY num DESC
		<![CDATA[
				)tb WHERE ROWNUM <=#{end}
			)WHERE rnum>= #{start}
		]]>
	</select>
	
	<!--리스트 탑  -->
	<select id="listNoticeTop" parameterType="map" resultType="com.wooltari.notice.Notice">
		SELECT n.num, notice, subject, hitCount, created, n.userId, content
					FROM notice n
					JOIN member m ON n.userId=m.userId
					WHERE notice=1
					ORDER BY num DESC
	
	</select>
	
	
	<!-- 글보기 -->
	<select id="readNotice" parameterType="Integer" resultType="com.wooltari.notice.Notice">
		SELECT num, notice, subject, hitCount, created, n.userId, content
		FROM notice n
		JOIN member m ON n.userId=m.userId WHERE num=#{num}
	</select>
	
	<!-- 조회수 증가 -->
	<update id="updateHitCount" parameterType="Integer">
		UPDATE notice SET hitCount=hitCount+1 WHERE num=#{num}
	</update>
	
	<!-- 이전글 -->
	<select id="preReadNotice" resultType="com.wooltari.notice.Notice" parameterType="map">
		SELECT tb.* FROM
		(SELECT num, n.userId, subject FROM notice n JOIN member m ON n.userId=m.userId
		<where>
			<if test="searchValue !=null and searchValue!=''">
				<include refid="where-list"/>
			</if>
			<![CDATA[
				AND (num > #{num})
			]]>
		</where>
			ORDER BY num ASC
		)tb WHERE ROWNUM=1
	</select>
	
	<!-- 다음글 -->
	<select id="nextReadNotice" resultType="com.wooltari.notice.Notice" parameterType="map">
		SELECT tb.* FROM(SELECT num, n.userId, subject FROM notice n JOIN member m ON n.userId=m.userId
		<where>
			<if test="searchValue !=null and searchValue!=''">
				<include refid="where-list"/>
			</if>
			<![CDATA[
				AND (num < #{num})
			]]>
		</where>
			ORDER BY num DESC
		)tb WHERE ROWNUM=1
	</select>
	
	<!-- 수정  -->
	<update id="updateNotice" parameterType="com.wooltari.notice.Notice">
		UPDATE notice SET subject=#{subject}, content=#{content}, notice = #{notice}	
				WHERE num=#{num}				 
	</update>
	
	<!-- 삭제  -->
	<delete id="deleteNotice" parameterType="Integer">
		DELETE FROM notice WHERE num=#{num} 
	</delete>
	
	<!-- 다중 삭제 -->
	<delete id="deleteList" parameterType="java.util.List">
		DELETE FROM notice WHERE num IN
			<foreach close=")" separator="," open="(" collection="list" index="index" item="num">#{num}</foreach>
	</delete>
	
	
	
	
	
	
	
	
	
	
	
	
	
</mapper>