<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="promote">
	<!-- 홍보글 등록 -->
	<insert id="insertBoard" parameterType="com.wooltari.promote.Promote">
		insert into promotelist(num,subject,content,imagefilename,s_num,userId) values(promotenum_seq.nextval,#{subject},#{content},#{imageFileName,jdbcType=VARCHAR},#{s_num},#{userId})		
	</insert>
	
	<!-- 가입 스터디 목록 -->
	<select id="pushStudy" parameterType="map" resultType="com.wooltari.promote.Promote">
		select s_num,studyname,recruit,gender,m.userId,userName from study s
		join member m on s.userId=m.userId where m.userId=#{userId}
	</select>
	
	
	<sql id="where-list">
		<if test="searchKey=='userName'">
			userName=#{searchValue}
		</if>
		<if test="searchKey=='subject'">
			instr(subject,#{searchValue}) &gt; 0
		</if>
		<if test="searchKey=='content'">
			 DBMS_LOB.INSTR(content,#{searchValue}) &gt; 0
		</if>
	</sql>
	
	<!-- 홍보글 리스트 -->
	<select id="listBoard" parameterType="map" resultType="com.wooltari.promote.Promote">
		select * from(
			select rownum rnum, tb.* from(
				select distinct p.num,p.subject,p.content,hitcount,p.imagefilename,userName,c.choicecategory,s.subject name,sc.choicecity,target,cityname,recruit,gender,
					p.created,p.s_num,p.userId,(select nvl(count(*),0) from promotereply where num=p.num)replyCount
					from promotelist p 
			       	  join member m on p.userId=m.userId
		              join studycategory c on p.s_num=c.s_num
		              join s_category s on c.choicecategory=s.categorynum
		              join studycity sc on p.s_num=sc.s_num
		              join studytarget tar on p.s_num=tar.s_num
		              join s_city on sc.choicecity=s_city.citynum
                  	  join study on p.s_num=study.s_num
			         left outer join promotereply a on p.num=a.num
			<where>
				<if test="searchValue!=null and searchValue!=''">
					<include refid="where-list"/>
				</if>
			</where>
				order by num desc
		<![CDATA[		
			)tb where rownum <= #{end}
		)where rnum>=#{start}
		]]>
	</select>
	
	
	<!-- 글 개수 -->
	<select id="dataCount" resultType="Integer" parameterType="map">
		select nvl(count(*),0) from promotelist p
		join member m on p.userId=m.userId
		<where>
			<if test="searchValue!=null and searchValue!=''">
				<include refid="where-list"/>
			</if>
		</where>
	</select>
	
	<!-- 조회수 증가 -->
	<update id="updateHitCount" parameterType="Integer">	
		update promotelist set hitcount=hitcount+1 where num=#{num}
	</update>
	
	<!-- 글 보기 -->
	<select id="readBoard" parameterType="map" resultType="com.wooltari.promote.Promote">
		select p.num,p.subject,p.content,hitcount,p.created,p.imageFilename,p.s_num,p.userId,userName,target,study.recruit,gender,
        c.choicecategory,s.subject name,sc.choicecity,cityname
        from promotelist p
        join member m on p.userId=m.userId 
        join studycategory c on p.s_num=c.s_num
        join s_category s on c.choicecategory=s.categorynum
        join studycity sc on p.s_num=sc.s_num
        join s_city on sc.choicecity=s_city.citynum
        join studytarget tar on p.s_num=tar.s_num           
        join study on p.s_num=study.s_num
    	where num=#{num}
	</select>
	
	<!--이전글 -->
	
	
	<!--다음글  -->
	
	<!-- 글 수정 -->
	<update id="updateBoard" parameterType="com.wooltari.promote.Promote">
		update promotelist set subject=#{subject},content=#{content} where num=#{num}
		
	</update>
	
	<!-- 글 삭제 -->
	<delete id="deleteBoard" parameterType="Integer">
		delete promotelist where num=#{num}
	</delete>
	
	<!-- 홍보글 댓글등록 -->
	<insert id="insertReply" parameterType="com.wooltari.promote.PromoteReply">
	insert into promotereply(prnum,content,num,userId) values(promoterenum_seq.nextval,#{content},#{num},#{userId})
	</insert>
	
	<!-- 홍보글 댓글 리스트 -->
	<select id="readReply" parameterType="Integer" resultType="com.wooltari.promote.PromoteReply">
		select * from(
		  select rownum rnum, tb.* from(
		    select prnum,content,p.created,p.userid,username,num
		    from promotereply p
		    join member m on p.userid=m.userid
		    where num=#{num}
		    order by prnum desc
		  <![CDATA[		
			)tb where rownum <= #{end}
		)where rnum>=#{start}
		]]>
	</select>
	
	<!-- 댓글 카운트 -->
	<select id="replyCount" parameterType="map" resultType="Integer">
		select nvl(count(*),0) from promotereply where num=#{num}
	</select>
	
	<!-- 댓글삭제 -->
	<delete id="deleteReply" parameterType="Integer">
		delete from promotereply where prnum=#{prnum}
	</delete>
	
</mapper>