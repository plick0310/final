<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="point">
	
	<!-- 보기 조건 -->
	<sql id="mode-list">
    	<if test="mode=='all'">
		</if>
		<if test="mode=='increase'">
		AND value > 0
		</if>
		<if test="mode=='decrease'">
		AND 0 > value
		</if>
    </sql>
	
	<insert id="insertLog" parameterType="map">
	INSERT INTO memberpoint(userId, value, info)
	VALUES (#{userId}, #{value}, #{info})	
	</insert>
	
	<update id="updatePoint" parameterType="map">
	UPDATE member SET point=point+${value} WHERE userId = #{userId}
	</update>
	
	<select id="dataCount" parameterType="map" resultType="Integer">
	SELECT NVL(COUNT(*),0)
	FROM memberpoint mp
	JOIN member m
	ON mp.userId = m.userId
	WHERE mp.userId = #{userId}
	<include refid="mode-list"/>
	</select>
	
	<select id="listLog" parameterType="map" resultType="com.wooltari.point.Point">
	SELECT * FROM(
		SELECT ROWNUM rnum, tb.* FROM(
				SELECT term, value, info
				FROM memberpoint mp
				JOIN member m ON mp.userId = m.userId
				WHERE mp.userId = #{userId}
				<include refid="mode-list"/> 
				ORDER BY term DESC
	<![CDATA[
			)tb WHERE ROWNUM <=#{end}
		)WHERE rnum>= #{start}
	]]>
	</select>
	
	
	<!-- 포인트 결제 금액/할인율/마일리지 -->

	<!-- 리드 -->
	<select id="readPointPay" resultType="com.wooltari.point.PointPay" parameterType="Integer">
	SELECT * FROM pointpay
	WHERE price = #{price}
	</select>
	
	<!-- 개수 -->
	<select id="countPointPay" resultType="Integer">
	SELECT NVL(COUNT(*),0)
	FROM pointpay
	</select>
	
	<!-- 리스트 -->
	<select id="listPointPay" resultType="com.wooltari.point.PointPay" parameterType="map">
	SELECT * FROM(
		SELECT ROWNUM rnum, tb.* FROM(
				SELECT price, sale, mileage
				FROM pointpay
				ORDER BY price ASC
	<![CDATA[
			)tb WHERE ROWNUM <=#{end}
		)WHERE rnum>= #{start}
	]]>
	</select>
	
	<!-- 추가 -->
	<insert id="insertPointPay" parameterType="map">
	INSERT INTO pointpay (price, sale, mileage) VALUES (#{price}, #{sale, jdbcType=VARCHAR}, #{mileage, jdbcType=VARCHAR});
	</insert>
	
	<!-- 수정 -->
	<update id="updatePointPay" parameterType="map">
	UPDATE pointpay SET price=#{price},sale=#{sale},mileage=#{mileage}
	</update>
	
	<!-- 삭제  -->
	<delete id="deletePointPay" parameterType="map">
	DELETE FROM pointpay WHERE price=#{price} 
	</delete>
	
</mapper>