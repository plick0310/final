<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="downloadBoard">

	<!-- serviceImpl에 insertBoard에 서 새글번호 생성 -->
	<select id="maxNum" resultType="Integer">
		SELECT NVL(MAX(num), 0) FROM downloadBoard
	</select>

	<!-- DB에 글 삽입  -->
	<insert id="insertBoard" parameterType="com.wooltari.downloadBoard.DownloadBoard">
		INSERT INTO downloadBoard(num, subject, content, userId)
		VALUES(downloadBoard_seq.NEXTVAL, #{subject}, #{content}, #{userId})	
	</insert>
	
	
	<!-- sql 태그
	
       * LIKE 대신 INSTR() 함수를 사용하는 경우
          INSTR(content, #{searchValue}) &gt; 0
       * CLOB인 경우 검색(CLOB는 LIKE를 사용하면 성능 저하)
          DBMS_LOB.INSTR(content, #{searchValue}) &gt; 0 
	 -->
	 <!-- mapper에 리스트에서 사용  -->
	<sql id="where-list">
	  <if test="searchKey=='userId'">
	      d.userId=#{searchValue}
	  </if>
	  <if test="searchKey=='subject'">
	      INSTR(subject, #{searchValue}) &gt; 0
	  </if>
	  <if test="searchKey=='content'">
	      DBMS_LOB.INSTR(content, #{searchValue}) &gt; 0 
	  </if>	 
	</sql>
	
	<!-- 글개수 -->
	<select id="dataCount" parameterType="map"
	            resultType="Integer">
	  SELECT NVL(COUNT(*), 0) FROM downloadBoard d
	        JOIN member m
	        ON d.userId=m.userId
	     <where>
	     	<if test="searchValue!=null and searchValue!='' ">
	     	    <include refid="where-list"/>
	     	</if>
	     </where>   
	</select>
	
	<!-- 글리스트 -->
	<select id="listBoard" parameterType="map"
	            resultType="com.wooltari.downloadBoard.DownloadBoard">
		SELECT * FROM (
		    SELECT ROWNUM rnum, tb.* FROM (
			    SELECT d.num, d.userId, subject, created,hitCount
			    
			    ,NVL(likeCount, 0) likeCount, NVL(replyCount, 0) replyCount
			      
			       FROM downloadBoard d
			       JOIN member m ON d.userId=m.userId
			     
			       LEFT OUTER JOIN (SELECT num, COUNT(*) replyCount FROM downloadReply GROUP BY num) r ON d.num=r.num
			       LEFT OUTER JOIN (SELECT num, COUNT(*) likeCount FROM downloadLike GROUP BY num) l ON d.num=l.num	
			       
                    <where>
                         <if test="searchValue != null and searchValue != ''">
			                  <include refid="where-list"/>
		                 </if>
	                </where>
	                ORDER BY num DESC
	<![CDATA[
	        ) tb WHERE ROWNUM <= #{end}
	    ) WHERE rnum >= #{start}
	]]>
	</select>	
	
	<!-- 글보기 -->
	<select id="readBoard" resultType="com.wooltari.downloadBoard.DownloadBoard" parameterType="Integer">
		SELECT num, subject, content, hitCount, created, d.userId FROM downloadBoard d		
		JOIN member m ON d.userId = m.userId WHERE num= #{num}	
	</select>
	
	<!-- 조회수 증가  -->
	<update id="updateHitCount" parameterType="Integer">
		UPDATE downloadBoard SET hitCount=hitCount+1 WHERE num=#{num}
	</update>
	
	<!-- 이전글 -->
	<select id="preReadBoard" resultType="com.wooltari.downloadBoard.DownloadBoard" parameterType="map">
		SELECT tb.* FROM(SELECT num, i.userId, subject FROM downloadBoard d JOIN member m ON d.userId=m.userId
		<where>
			<if test="searchValue !=null and searchValue!=''">
				<include refid="where-list"/>
			</if>
			<![CDATA[
				AND (num > #{num})
			]]>
		</where>
			ORDER BY num ASC
		)tb WHERE ROWNUM=1
	</select>
	
	<!-- 다음글 -->
	<select id="nextReadBoard" resultType="com.wooltari.downloadBoard.DownloadBoard" parameterType="map">
		SELECT tb.* FROM(SELECT num, d.userId, subject FROM downloadBoard d JOIN member m ON d.userId=m.userId
		<where>
			<if test="searchValue !=null and searchValue!=''">
				<include refid="where-list"/>
			</if>
			<![CDATA[
				AND (num < #{num})
			]]>
		</where>
			ORDER BY num DESC
		)tb WHERE ROWNUM=1
	</select>
	
	<!-- 수정  -->
	<update id="updateBoard" parameterType="com.wooltari.downloadBoard.DownloadBoard">
		UPDATE downloadBoard SET subject=#{subject}, content=#{content}				
				WHERE num=#{num}				 
	</update>
	
	<!-- 삭제  -->
	<delete id="deleteBoard" parameterType="Integer">
		DELETE FROM downloadBoard WHERE num=#{num}
	</delete>
	
	<!-- 게시물 공감 -->
	<insert id="insertLikeBoard" parameterType="com.wooltari.downloadBoard.DownloadBoard">
		INSERT INTO downloadLike(num, userId) VALUES(#{num},#{userId})
	</insert>
	
	<select id="countLikeBoard" resultType="Integer" parameterType="Integer">
		SELECT NVL(COUNT(*),0) boardCountLike FROM downloadLike WHERE num=#{num}	
	</select>
	
	<!-- 회원 탈퇴시 게시물 삭제 -->
	<select id="listBoardId" parameterType="String" resultType="com.wooltari.downloadBoard.DownloadBoard">
			SELECT num, userId, subject, content, hitCount, created, saveFilename, originalFilename
			FROM downloadBoard d 
			JOIN member m ON d.userId=m.userId
			JOIN downloadFile f ON d.num=f.num
			WHERE userId=#{userId}
	</select>
	<delete id="deleteBoardId" parameterType="String">
		DELETE FROM downloadBoard WHERE userId=#{userId}
	</delete>
	
	<!-- 댓글 처리 -->
	<insert id="insertReply" parameterType="com.wooltari.downloadBoard.Reply">
	INSERT INTO downloadReply(replyNum, num, userId, content, answer)
		VALUES(downloadReply_seq.NEXTVAL, #{num}, #{userId}, #{content}, #{answer})	
	</insert>
	
	<!-- 댓글 개수 -->
	<select id="replyDataCount" resultType="Integer" parameterType="map">
		SELECT NVL(COUNT(*), 0) FROM downloadReply WHERE num=#{num} AND answer=0
	</select>
	
	<!-- 댓글  리스트-->
	<select id="listReply" resultType="com.wooltari.downloadBoard.Reply" parameterType="map">
		SELECT * FROM(
			SELECT ROWNUM rnum, tb.* FROM(
				SELECT tbreply.replyNum, num, userId, content, created									
				FROM				
					(
						SELECT replyNum, r.num, r.userId, r.content, r.created
							FROM downloadReply r
							JOIN downloadBoard d ON r.num=d.num
							JOIN member m ON r.userId=m.userId
							WHERE r.num=#{num} AND answer=0
					) tbreply	
				ORDER BY replyNum DESC
				<![CDATA[				
			)tb WHERE ROWNUM <= #{end}
		) WHERE rnum >= #{start}
		]]>
	</select>
		
	<!-- 댓글 삭제 -->
	<delete id="deleteReply" parameterType="map">
		DELETE downloadReply WHERE
			<if test="mode=='num'">
				num=#{num}
			</if>
			<if test="mode=='reply'">
				replyNum IN
				(SELECT replyNum FROM infoReqReply START WITH replyNum=#{replyNum}
				CONNECT BY PRIOR replyNum = answer)
			</if>
			<if test="mode=='answer'">
				replyNum=#{replyNum}
			</if> 
	</delete>	
	
	<!-- 파일 -->	
	<insert id="insertFile" parameterType="com.wooltari.downloadBoard.DownloadBoard">
		 INSERT INTO downloadFile(fileNum, num, saveFilename, originalFilename)
 			 VALUES(downloadFile_seq.NEXTVAL, #{num}, #{saveFilename}, #{originalFilename})
	</insert>
	
	<select id="listFile" parameterType="Integer" resultType="com.wooltari.downloadBoard.DownloadBoard">
		SELECT fileNum, num, saveFilename, originalFilename FROM downloadFile WHERE num=#{num}	
	</select>
	
	
	<select id="readFile" parameterType="Integer" resultType="com.wooltari.downloadBoard.DownloadBoard">
		SELECT fileNum, num, saveFilename, originalFilename FROM downloadFile WHERE fileNum=#{fileNum}	
	</select>
	
	<delete id="deleteFile" parameterType="map">
	DELETE FROM downloadFile WHERE ${field}=#{num}
	</delete>
	
	<!-- 다중 삭제 -->
	<delete id="deleteList" parameterType="java.util.List">
		DELETE FROM downloadBoard WHERE num IN
			<foreach close=")" separator="," open="(" collection="list" index="index" item="num">#{num}</foreach>
	</delete>
</mapper>