<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="report">
<!-- 울타리 신고건의 -->
	
<select id="seq" resultType="Integer">
	SELECT report_seq.NEXTVAL FROM dual
</select>	

<insert id="insertReport" parameterType="com.wooltari.report.Report">
	INSERT INTO report(repNum, userId, subject, content, groupNum, orderNo, depth, parent, category )
	VALUES(#{repNum}, #{userId}, #{subject}, #{content,jdbcType=CLOB}, #{groupNum}, #{orderNo}, #{depth}, #{parent}, #{category})
</insert>

<sql id="where-list">
	<if test="searchKey=='userId'">
		userId=#{searchValue}
	</if>
	<if test="searchKey=='subject'">
		INSTR(subject, #{searchValue}) &gt;0
	</if>
	<if test="searchKey=='content'">
		DBMS_LOB.INSTR(content,#{searchValue}) &gt;0
	</if>
	<if test="searchKey=='created'">
		TO_CHAR(created,'YYYY-MM-DD')=#{searchValue}
		OR TO_CHAR(b.created,'YYYYMMDD') = #{searchValue}
	</if>
</sql>

<update id="updateOrderNo" parameterType="map">
	UPDATE report SET orderNo=orderNo+1
	<![CDATA[
		WHERE groupNum=#{groupNum} AND orderNo>#{orderNo}
	]]>
</update>

<select id="listReport" parameterType="map" resultType="com.wooltari.report.Report">
	SELECT * FROM(
		SELECT ROWNUM rnum, tb.* FROM(
			SELECT repNum, r.userId, category, subject, content,
				groupNum, orderNo, depth, created
				FROM report r JOIN member m ON r.userId=m.userId
		<where>
			<if test="searchValue !=null and searchValue!=''">
				<include refid="where-list"></include>
			</if>
		</where>
			ORDER BY groupNum DESC, orderNo ASC
	<![CDATA[
		) tb WHERE ROWNUM <=#{end}
	) WHERE rnum >=#{start}
]]>
</select>


<select id="dataCount" parameterType="map" resultType="Integer" >
	SELECT NVL(COUNT(*),0) FROM report r JOIN member m ON r.userId=m.userId
	<where>
		<if test="searchValue !=null and searchValue!=''">
			<include refid="where-list"></include>
		</if>
	</where>
</select>

<!-- 글보기 -->
<select id="readReport" parameterType="Integer" resultType="com.wooltari.report.Report">
	SELECT repNum, r.userId, category, subject, content, groupNum, depth, orderNo, created
	FROM report r 
	JOIN member m ON r.userId=m.userId WHERE repNum=#{repNum}
</select>

<!-- 이전 글 -->
<select id="preReadReport" parameterType="map" resultType="com.wooltari.report.Report">
	SELECT tb.* FROM(
		SELECT repNum, r.userId, subject FROM report r JOIN member m ON r.userId=m.userId
		<where>
			<if test="searchValue!=null and searchValue!=''">
				<include refid="where-list"/>
			</if>
			<![CDATA[
				AND (repNum>#{repNum})
			]]>
		</where>
		ORDER BY repNum ASC	
	)tb WHERE ROWNUM=1
</select>

<!-- 다음 글 -->
<select id="nextReadReport" parameterType="map" resultType="com.wooltari.report.Report">
	SELECT tb.* FROM(
		SELECT repNum, r.userId, subject FROM report r JOIN member m ON r.userId=m.userId
		<where>
			<if test="searchValue!=null and searchValue!=''">
				<include refid="where-list"/>
			</if>
			<![CDATA[
				AND (repNum<#{repNum})
			]]>
		</where>
		ORDER BY repNum DESC
	)tb WHERE ROWNUM=1
</select>
<update id="updateReport" parameterType="com.wooltari.report.Report">
	UPDATE report SET subject=#{subject}, content=#{content}
		WHERE repNum=#{repNum}
</update>
<delete id="deleteReport" parameterType="Integer">
             DELETE FROM report WHERE repNum IN 
               (SELECT repNum FROM report START WITH  repNum = #{repNum}
	            CONNECT BY PRIOR repNum = parent)
</delete>

<delete id="deleteList" parameterType="java.util.List">
	DELETE FROM report WHERE repNum IN
	<foreach close=")" separator="," open="(" collection="list" index="index" item="repNum">#{repNum}</foreach>
</delete>
</mapper>